package com.example.first_project;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

import com.example.first_project.model.ChatItem;
import com.example.first_project.adapter.ChatsAdapter;

import java.util.ArrayList;
import java.util.List;

public class ChatsAdapterTest {

    private List<ChatItem> testChats;
    private ChatsAdapter.OnChatClick mockOnClick;
    private ChatsAdapter adapter;

    @Before
    public void setUp() {
        testChats = new ArrayList<>();
        mockOnClick = new ChatsAdapter.OnChatClick() {
            @Override
            public void onClick(ChatItem item) {
                // Mock implementation
            }
        };
        adapter = new ChatsAdapter(testChats, mockOnClick);
    }

    @Test
    public void getItemCount_EmptyList_ReturnsZero() {
        assertEquals(0, adapter.getItemCount());
    }

    @Test
    public void getItemCount_WithChats_ReturnsCorrectCount() {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫
        testChats.add(new ChatItem("Chat 1", "Subtitle 1"));
        testChats.add(new ChatItem("Chat 2", "Subtitle 2"));
        testChats.add(new ChatItem("Chat 3", "Subtitle 3"));
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        assertEquals(3, count);
    }

    @Test
    public void constructor_WithValidParameters_InitializesCorrectly() {
        // –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        List<ChatItem> chats = new ArrayList<>();
        chats.add(new ChatItem("Test Chat", "Test Subtitle"));
        ChatsAdapter.OnChatClick onClick = new ChatsAdapter.OnChatClick() {
            @Override
            public void onClick(ChatItem item) {}
        };
        
        ChatsAdapter newAdapter = new ChatsAdapter(chats, onClick);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–∞–ø—Ç–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        assertNotNull(newAdapter);
        assertEquals(1, newAdapter.getItemCount());
    }

    @Test
    public void constructor_WithNullList_HandlesGracefully() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É null —Å–ø–∏—Å–∫–∞ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
        try {
            new ChatsAdapter(null, mockOnClick);
            // –ï—Å–ª–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —ç—Ç–æ –ø—Ä–∏–µ–º–ª–µ–º–æ
            assertTrue("Constructor should handle null list gracefully", true);
        } catch (Exception e) {
            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —ç—Ç–æ —Ç–æ–∂–µ –ø—Ä–∏–µ–º–ª–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
            assertTrue("Exception should be handled gracefully", true);
        }
    }

    @Test
    public void constructor_WithNullOnClick_HandlesGracefully() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É null onClick –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
        try {
            new ChatsAdapter(testChats, null);
            // –ï—Å–ª–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —ç—Ç–æ –ø—Ä–∏–µ–º–ª–µ–º–æ
            assertTrue("Constructor should handle null onClick gracefully", true);
        } catch (Exception e) {
            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —ç—Ç–æ —Ç–æ–∂–µ –ø—Ä–∏–µ–º–ª–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
            assertTrue("Exception should be handled gracefully", true);
        }
    }

    @Test
    public void getItemCount_WithSingleChat_ReturnsOne() {
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω —á–∞—Ç –≤ —Å–ø–∏—Å–æ–∫
        testChats.add(new ChatItem("Single Chat", "Single Subtitle"));
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–≤–Ω–æ 1
        assertEquals(1, count);
    }

    @Test
    public void getItemCount_WithMultipleChats_ReturnsCorrectCount() {
        // –î–æ–±–∞–≤–ª—è–µ–º 10 —á–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫
        for (int i = 0; i < 10; i++) {
            testChats.add(new ChatItem("Chat " + i, "Subtitle " + i));
        }
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–≤–Ω–æ 10
        assertEquals(10, count);
    }

    @Test
    public void getItemCount_AfterAddingChat_ReturnsUpdatedCount() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞
        int initialCount = adapter.getItemCount();
        
        testChats.add(new ChatItem("New Chat", "New Subtitle"));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ 1
        assertEquals(initialCount + 1, adapter.getItemCount());
    }

    @Test
    public void getItemCount_WithEmptyChatItems_ReturnsCorrectCount() {
        // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç—ã —Å –ø—É—Å—Ç—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏
        testChats.add(new ChatItem("", ""));
        testChats.add(new ChatItem("", ""));
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Å—Ç—ã–µ —á–∞—Ç—ã —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –ø–æ–¥—Å—á–µ—Ç–µ
        assertEquals(2, count);
    }

    @Test
    public void getItemCount_WithNullChatItems_ReturnsCorrectCount() {
        // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç—ã —Å null –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        testChats.add(new ChatItem(null, null));
        testChats.add(new ChatItem(null, null));
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∞—Ç—ã —Å null –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –ø–æ–¥—Å—á–µ—Ç–µ
        assertEquals(2, count);
    }

    @Test
    public void getItemCount_WithLongChatNames_ReturnsCorrectCount() {
        // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç —Å –¥–ª–∏–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏
        String longName = "This is a very long chat name that might be used in the application";
        String longSubtitle = "This is a very long subtitle that contains a lot of text";
        
        testChats.add(new ChatItem(longName, longSubtitle));
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∞—Ç —Å –¥–ª–∏–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –ø–æ–¥—Å—á–µ—Ç–µ
        assertEquals(1, count);
    }

    @Test
    public void getItemCount_WithSpecialCharacters_ReturnsCorrectCount() {
        // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        String specialName = "Chat with √©mojis üéâ and symbols @#$%";
        String specialSubtitle = "Subtitle with unicode: –ü—Ä–∏–≤–µ—Ç! üåü";
        
        testChats.add(new ChatItem(specialName, specialSubtitle));
        
        int count = adapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∞—Ç —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –ø–æ–¥—Å—á–µ—Ç–µ
        assertEquals(1, count);
    }

    @Test
    public void onChatClickInterface_IsDefined() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å OnChatClick –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
        assertNotNull(ChatsAdapter.OnChatClick.class);
    }

    @Test
    public void adapter_HandlesEmptyListCorrectly() {
        // –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä —Å –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º
        List<ChatItem> emptyList = new ArrayList<>();
        ChatsAdapter emptyAdapter = new ChatsAdapter(emptyList, mockOnClick);
        
        int count = emptyAdapter.getItemCount();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        assertEquals(0, count);
    }
}
